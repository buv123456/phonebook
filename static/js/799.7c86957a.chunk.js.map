{"version":3,"file":"static/js/799.7c86957a.chunk.js","mappings":"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","sources":["components/Forms/Forms.styled.jsx","helpers/submitCheck.js","redux/contacts/selectors.js","hooks/useContact.js","components/Forms/ContactForm.jsx","components/EditContact/EditContact.styled.jsx","components/EditContact/EditContact.jsx","components/contacts/ContactList/ContactItem.jsx","components/contacts/ContactList/ContactList.styled.jsx","components/contacts/ContactList/ContactList.jsx","helpers/sorting.js","components/contacts/ContactList/SortBox.jsx","components/contacts/Filter/Filter.jsx","components/contacts/Filter/Filter.styled.jsx","components/contacts/Phonebook/Phonebook.jsx","components/contacts/Phonebook/Phonebook.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  width: 600px;\n  height: ${({ name, theme }) => theme.height[name]};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  position: relative;\n  padding: 20px;\n  background-color: ${({ theme }) => theme.colors.main};\n  border-radius: 10px;\n  box-shadow: 5px 5px 10px black;\n\n  & label {\n    font-weight: bold;\n    position: relative;\n    width: 500px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 5px;\n  }\n`;\n\nexport const FieldStyled = styled(Field)`\n  width: 80%;\n  height: 30px;\n  padding: 1px 5px;\n  font-size: 100%;\n  font-weight: inherit;\n  border-radius: 5px;\n`;\n\nexport const ErrorMsgStyled = styled(ErrorMessage)`\n  position: absolute;\n  top: calc(100% + 5px);\n  right: 0;\n  width: 100%;\n  text-align: center;\n  padding: 2px 10px;\n  color: #9a0c0c;\n  background-color: #ffffff8b;\n  font-size: 12px;\n  border-radius: 5px;\n`;\n\nexport const BtnForm = styled.button`\n  width: 90%;\n  height: 40px;\n  font-size: inherit;\n  font-weight: bold;\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  box-shadow: 3px 3px 10px #000000be;\n  outline: none;\n  transition: all 200ms;\n  &:hover {\n    background-color: #02f7f7;\n    scale: 1.03;\n  }\n  &:active {\n    scale: 1.01;\n  }\n`;\n","import * as Yup from 'yup';\n\nexport const ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Required'),\n  number: Yup.string()\n    .min(2, 'Too Short!')\n    .max(30, 'Too Long!')\n    .matches(\n      /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Required'),\n});\n\nexport const LoginSchema = Yup.object().shape({\n  email: Yup.string().email().max(255).required('Email is required'),\n  password: Yup.string()\n    .min(8, 'At least 8 symbols')\n    .max(255, \"It's too long\")\n    .required('Password is required'),\n});\n\nexport const RegisterSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Required'),\n  email: Yup.string().email().max(255).required('Required'),\n  password: Yup.string()\n    .min(8, 'At least 8 symbols')\n    .max(255, \"It's too long\")\n    .required('Required'),\n});\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (items, filter) =>\n    items.filter(({ name, number }) =>\n      (name + number).toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\n\nexport const useContact = () => {\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return {\n    filter,\n    contacts,\n    error,\n    isLoading,\n    filteredContacts,\n  };\n};\n","import { Formik } from 'formik';\nimport Spinner from 'react-spinner-material';\nimport { useDispatch } from 'react-redux';\nimport { ContactSchema } from 'helpers/submitCheck';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  BtnForm,\n  ErrorMsgStyled,\n  FieldStyled,\n  FormStyled,\n} from './Forms.styled';\nimport { useContact } from 'hooks/useContact';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const { isLoading, contacts } = useContact();\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    name = name.trim();\n    number = number.trim();\n\n    if (\n      contacts.some(\n        ({ name: savedName }) => savedName.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(name + ' is already in contacts list!');\n    } else {\n      dispatch(addContact({ name, number }));\n      resetForm();\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={ContactSchema}\n    >\n      <FormStyled name=\"contact\">\n        <label>\n          Name\n          <FieldStyled\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Charles de Castelmore d'Artagnan\"\n          />\n          <ErrorMsgStyled name=\"name\" component=\"div\" />\n        </label>\n        <label>\n          Phone\n          <FieldStyled type=\"tel\" name=\"number\" placeholder=\"Phone\" />\n          <ErrorMsgStyled name=\"number\" component=\"div\" />\n        </label>\n        <BtnForm type=\"submit\" disabled={isLoading}>\n          {isLoading ? (\n            <Spinner radius={25} color={'#333'} stroke={3} visible={true} />\n          ) : (\n            'Add contact'\n          )}\n        </BtnForm>\n      </FormStyled>\n    </Formik>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #000000aa;\n\n  & h3 {\n    font-weight: 500;\n    width: 90%;\n  }\n  & span {\n    color: green;\n  }\n`;\n\nexport const ButtonClose = styled.button`\n  width: 2em;\n  height: 2em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: transparent;\n  border: none;\n  transition: all 200ms;\n  transform: rotate(0);\n\n  &:hover {\n    transform: rotate(0.5turn);\n  }\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CgCloseO } from 'react-icons/cg';\nimport { useEffect } from 'react';\n\nimport { ContactSchema } from 'helpers/submitCheck';\nimport { editContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport {\n  BtnForm,\n  ErrorMsgStyled,\n  FieldStyled,\n  FormStyled,\n} from '../Forms/Forms.styled';\nimport { ButtonClose, Wrapper } from './EditContact.styled';\n\nexport function EditContact({\n  contact: { name: savedName, number: savedNumber, id },\n  handleClose,\n}) {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  // add possibility closing by ESC\n  useEffect(() => {\n    const handleCloseESC = e => {\n      if (e.code === 'Escape') handleClose();\n    };\n    document.body.style.overflow = 'hidden';\n    window.addEventListener('keydown', handleCloseESC);\n    return () => {\n      document.body.style.overflow = 'auto';\n      window.removeEventListener('keydown', handleCloseESC);\n    };\n  }, [handleClose]);\n\n  // closing by click on wrapper\n  const onClose = e => {\n    if (e.target === e.currentTarget) handleClose();\n  };\n\n  const handleSubmit = ({ name, number }) => {\n    name = name.trim();\n    number = number.trim();\n\n    const checkContact = contacts.find(i => i.name === name);\n    if (checkContact && checkContact.id !== id) {\n      alert(name + ' is already in contacts list!');\n    } else if (name === savedName && number === savedNumber) {\n      handleClose();\n    } else {\n      dispatch(editContact({ name, number, id }));\n      handleClose();\n    }\n  };\n  return (\n    <Wrapper onClick={onClose}>\n      <Formik\n        initialValues={{ name: savedName, number: savedNumber }}\n        onSubmit={handleSubmit}\n        validationSchema={ContactSchema}\n      >\n        <FormStyled name=\"editContact\">\n          <h3>\n            Edit: <span>{savedName}</span>\n          </h3>\n\n          <label>\n            Name\n            <FieldStyled type=\"text\" name=\"name\" />\n            <ErrorMsgStyled name=\"name\" component=\"div\" />\n          </label>\n          <label>\n            Phone\n            <FieldStyled type=\"tel\" name=\"number\" />\n            <ErrorMsgStyled name=\"number\" component=\"div\" />\n          </label>\n          <BtnForm type=\"submit\">Save contact</BtnForm>\n          <ButtonClose type=\"button\" onClick={() => handleClose()}>\n            <CgCloseO size=\"2em\" />\n          </ButtonClose>\n        </FormStyled>\n      </Formik>\n    </Wrapper>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { CgTrashEmpty } from 'react-icons/cg';\nimport { TbUserEdit } from 'react-icons/tb';\nimport Spinner from 'react-spinner-material';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ButtonItemStyled, ItemInfoStyled } from '..';\nimport { createPortal } from 'react-dom';\nimport { EditContact } from 'components/EditContact/EditContact';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport function ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    setIsLoading(true);\n  };\n\n  return (\n    <>\n      <ItemInfoStyled>\n        <span>{name}:</span>\n        <span> {number}</span>\n      </ItemInfoStyled>\n      <ButtonItemStyled\n        type=\"button\"\n        name=\"edit\"\n        disabled={isLoading}\n        onClick={() => {\n          setIsEditing(true);\n        }}\n      >\n        <TbUserEdit size=\"22px\" />\n      </ButtonItemStyled>\n      <ButtonItemStyled\n        type=\"button\"\n        name=\"delete\"\n        disabled={isLoading}\n        onClick={handleDelete}\n      >\n        {isLoading ? (\n          <Spinner radius={18} color={'#777'} stroke={4} visible={true} />\n        ) : (\n          <CgTrashEmpty size=\"22px\" />\n        )}\n      </ButtonItemStyled>\n      {isEditing &&\n        createPortal(\n          <EditContact\n            name=\"editForm\"\n            contact={{ name, number, id }}\n            handleClose={() => setIsEditing(false)}\n          />,\n          modalRoot\n        )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ListStyled = styled.ul`\n  width: 100%;\n  font-size: 18px;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding: 5px;\n  overflow: auto;\n  &::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #888;\n    border-radius: 5px;\n  }\n`;\n\nexport const ListItemStyled = styled.li`\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  color: #0000008d;\n  &:hover {\n    color: black;\n  }\n`;\n\nexport const ItemInfoStyled = styled.div`\n  width: 100%;\n  display: flex;\n  position: relative;\n  justify-content: space-between;\n  border-bottom: 1px dotted #000;\n`;\n\nexport const ButtonItemStyled = styled.button`\n  height: 24px;\n  width: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  text-transform: uppercase;\n  &:hover {\n    color: ${({ name }) => (name === 'delete' ? '#ff3737' : '#0026ff')};\n    scale: 1.2;\n  }\n`;\n\nexport const AllContactsStyled = styled.p`\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  font-weight: 700;\n  font-size: 10px;\n`;\n\nexport const CheckBoxStyled = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2px;\n  top: 15px;\n  right: 15px;\n  font-weight: 700;\n  font-size: 12px;\n`;\n\nexport const CheckStyled = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const LabelListStyled = styled.label`\n  display: flex;\n  gap: 4px;\n  align-items: center;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport sorting from 'helpers/sorting';\nimport {\n  AllContactsStyled,\n  ListItemStyled,\n  ListStyled,\n  SortBox,\n  ContactItem,\n} from '..';\nimport { useContact } from 'hooks/useContact';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n  const { contacts, filteredContacts } = useContact();\n  const [sortBy, setSortBy] = useState('name');\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleCheck = value => {\n    setSortBy(value);\n  };\n\n  return (\n    <>\n      <AllContactsStyled>\n        {contacts.length} all contacts <br />\n        {filteredContacts.length} filtered contacts\n      </AllContactsStyled>\n      <SortBox onCheck={handleCheck} sortBy={sortBy} />\n      <ListStyled>\n        {sorting(filteredContacts, sortBy).map(({ name, number, id }) => (\n          <ListItemStyled key={id}>\n            <ContactItem name={name} number={number} id={id} />\n          </ListItemStyled>\n        ))}\n      </ListStyled>\n    </>\n  );\n}\n","export default function sorting(items, indicator) {\n  return items.sort((a, b) =>\n    b[indicator].toLowerCase() > a[indicator].toLowerCase() ? -1 : 1\n  );\n}\n","import { CheckBoxStyled, CheckStyled, LabelListStyled } from '..';\n\nexport const SortBox = ({ onCheck, sortBy }) => {\n  return (\n    <CheckBoxStyled>\n      <span>sort by</span>\n      <CheckStyled>\n        <LabelListStyled>\n          name\n          <input\n            type=\"radio\"\n            value=\"name\"\n            checked={sortBy === 'name'}\n            onChange={e => onCheck(e.target.value)}\n          />\n        </LabelListStyled>\n        <LabelListStyled>\n          phone\n          <input\n            type=\"radio\"\n            value=\"number\"\n            checked={sortBy === 'number'}\n            onChange={e => onCheck(e.target.value)}\n          />\n        </LabelListStyled>\n      </CheckStyled>\n    </CheckBoxStyled>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { FilterStyled } from '..';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <FilterStyled\n      type=\"text\"\n      name=\"filter\"\n      onChange={e => dispatch(changeFilter(e.target.value))}\n      value={filter}\n      placeholder=\"add filter...\"\n    />\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterStyled = styled.input`\n  width: 50%;\n  font-size: 16px;\n  border-radius: 5px;\n  padding: 4px;\n`;\n","import { ContactList, Filter, PhonebookStyled } from '..';\n\nexport function Phonebook() {\n  return (\n    <PhonebookStyled>\n      <Filter />\n      <ContactList />\n    </PhonebookStyled>\n  );\n}\n","import styled from 'styled-components';\n\nexport const PhonebookStyled = styled.div`\n  width: 600px;\n  max-height: 420px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding: 10px;\n  background-color: ${({ theme }) => theme.colors.bg};\n  border-radius: 10px;\n  box-shadow: inset 0 0 30px teal, 3px 3px 10px black;\n`;\n","import { ContactForm } from 'components/Forms/ContactForm';\nimport { Phonebook } from 'components/contacts';\nimport styled from 'styled-components';\n\nconst PhonebookWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\nexport default function Contacts() {\n  return (\n    <PhonebookWrap>\n      <ContactForm />\n      <Phonebook />\n    </PhonebookWrap>\n  );\n}\n"],"names":["FormStyled","styled","Form","name","theme","height","colors","main","FieldStyled","Field","ErrorMsgStyled","ErrorMessage","BtnForm","ContactSchema","Yup","shape","min","max","matches","required","number","LoginSchema","email","password","RegisterSchema","selectFilter","state","filter","selectContacts","contacts","items","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","toLowerCase","includes","useContact","useSelector","filteredContacts","initialValues","ContactForm","dispatch","useDispatch","onSubmit","resetForm","trim","some","alert","addContact","validationSchema","type","placeholder","component","disabled","radius","color","stroke","visible","Wrapper","ButtonClose","EditContact","contact","savedName","savedNumber","id","handleClose","useEffect","handleCloseESC","e","code","document","body","style","overflow","window","addEventListener","removeEventListener","onClick","target","currentTarget","checkContact","find","i","editContact","size","modalRoot","querySelector","ContactItem","useState","setIsLoading","isEditing","setIsEditing","ItemInfoStyled","ButtonItemStyled","deleteContact","createPortal","ListStyled","ListItemStyled","AllContactsStyled","CheckBoxStyled","CheckStyled","LabelListStyled","ContactList","sortBy","setSortBy","fetchContacts","indicator","length","SortBox","onCheck","value","sort","a","b","map","checked","onChange","Filter","FilterStyled","changeFilter","Phonebook","PhonebookStyled","bg","PhonebookWrap","Contacts"],"sourceRoot":""}